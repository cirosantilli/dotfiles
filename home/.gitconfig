[alias]
	# The only ones that we really need are those who use tab autocomplete:
	# use bash aliases like `gco` for all others as it saves the space and compress `git`
	# without requiring `alias g=git`. Using aliases for git like `alias g='git'` does not work either.
	a = add
	b = branch
	c = checkout
	l = log
	m = merge
	o = commit
	r = rebase
	# But sometimes we need others for workflows that have use multiple Git repositories
	# and use scripts to do a command on all of them.
	cl = clone
	cm = commit
	pl = pull
	st = status
	# Usage: `git sh pwd`.
	# Command is always run from the toplevel.
	sh = "!exec "
	pushall = "!for i in `git remote`; do git push --all $i; done;"
[branch]
	# autosetuprebase = always
	rebase = true
[color]
	grep = auto
	ui = auto
[commit]
	template = ~/.gitmessage
[core]
	autocrlf = input
	whitespace = fix,-indent-with-non-tab,trailing-space
	excludesfile = ~/.gitignore_global
	quotepath = false
	# Always use pager, but leave output on screen afterwards.
	pager = less -Xr
	# Only use pager if the output does not fit to screen.
	#pager = less -FXr

	# Not using because it prevents hooks under `./.git/hooks` from running:
	# - https://stackoverflow.com/questions/2293498/applying-a-git-post-commit-hook-to-all-current-and-future-repos/37293198#37293198
	# - https://stackoverflow.com/questions/1977610/change-default-git-hooks/37293001#37293001
	# hooksPath = ~/.git_hooks
[credential]
	helper = cache --timeout=999999
[diff]
	renames = true
[grep]
	extendedRegexp = true
	lineNumber = true
[gpg]
	program = gpg2
[http]
	cookiefile = ~/.gitcookies
[mergetool]
	keepBackup = false
	prompt = false
[pager]
	# less -r to wrap long lines.
	# TODO make diff-highlight fall back to regular diff if not found.
	# diff = "if diff-highlight &>/tmp/git-diff.out; then cat /tmp/git-diff.out; else echo fail; fi | less -R"
	diff = diff-highlight | less -XRr
	log = diff-highlight | less -XRr
	show = diff-highlight | less -XRr
[pull]
	# https://stackoverflow.com/questions/13846300/how-to-make-git-pull-use-rebase-by-default-for-all-my-repositories
	rebase = true
[push]
	default = current
[rerere]
	enabled = true
[sendemail]
	# Locally per project you want:
	# git config sendemail.to <project@mail.com>
	annotate = true
	confirm = always
	from = Ciro Santilli <ciro.santilli@gmail.com>
	smtpserver = smtp.gmail.com
	smtpuser = ciro.santilli@gmail.com
	smtpencryption = tls
	smtpserverport = 587
	suppresscc = self
[status]
	short = true
[user]
	email = ciro.santilli@gmail.com
	name = Ciro Santilli
	signingkey = 3E47725ABD373A6F5D300686436CDAFCCFB0D30D
[url "git://anongit.kde.org/"]
	insteadOf = kde:
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
