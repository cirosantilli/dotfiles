#!/usr/bin/env python3

"""
Group by key on first column, and calculate statistics on second column.

Usage:

....
printf "\
key1 1.1
key1 1.2
key1 1.3
key2 2.1
key2 2.2
" > f
cirosantilli-groupby f
....

Output:

....
key mean cv sum variance stddev
key2 2.150e+00 3.289e-02 4.300e+00 5.000e-03 7.071e-02
key1 1.200e+00 1.179e-01 3.600e+00 2.000e-02 1.414e-01
....

Equivalent from stdin:

....
cirosantilli-groupby <f
....

Tabulate output:

....
cirosantilli-groupby f | column -t
....

This basically reimplemnts Pandas.
"""

import fileinput
import math
import pprint

sums = {}
nentries = {}
means = {}
variances = {}
stddevs = {}
cvs = {}
keyset = set()
key_vals = []
for line in fileinput.input():
    key, val = line.rstrip().split(' ')
    val = float(val)
    key_vals.append((key, val))
for key, val in key_vals:
    sums[key] = sums.get(key, 0.0) + val
    nentries[key] = nentries.get(key, 0) + 1
    keyset.add(key)
for key in keyset:
    means[key] = sums[key] / nentries[key]
for key, val in key_vals:
    variances[key] = variances.get(key, 0.0) + (val - means[key]) ** 2
for key in keyset:
    stddevs[key] = math.sqrt(variances[key])
    cvs[key] = stddevs[key] / means[key]
print(' '.join([
    'key',
    'mean',
    'cv',
    'sum',
    'variance',
    'stddev',
]))
for key in keyset:
    print(key + ' ' + ' '.join(
        '{:.3e}'.format(f) for f in [
            means[key],
            cvs[key],
            sums[key],
            variances[key],
            stddevs[key],
        ]
    ))
